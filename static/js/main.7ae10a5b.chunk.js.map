{"version":3,"sources":["components/redux/phonebook/phonebook-actions.js","components/redux/phonebookAPI.js","components/redux/phonebook/phonebook-options.js","components/redux/phonebook/phonebook-reduser.js","components/redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["filterContacts","createAction","a","name","number","console","log","axios","post","then","res","catch","err","data","id","delete","get","api","postContact","fetchContacts","deleteContact","createAsyncThunk","postContacts","items","createReducer","fulfilled","_","action","payload","state","filter","el","combineReducers","store","configureStore","reducer","contacts","contatsReduser","middleware","getDefaultMiddleware","concat","logger","ContactForm","handleChange","handleSubmit","className","onSubmit","onChange","type","value","pattern","title","required","Filter","ContactList","deleteItem","map","contact","onClick","App","useState","setName","setNumber","useSelector","dispatch","useDispatch","useEffect","options","e","target","preventDefault","some","includes","alert","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ae10a5b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('phonebook/filterContacts');\r\n","import axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nasync function postContact({ name, number }) {\r\n  console.log(name, number);\r\n\r\n  const { data } = await axios\r\n    .post('http://localhost:3000/contacts', {\r\n      name,\r\n      number,\r\n    })\r\n    .then(res => res)\r\n    .catch(err => err);\r\n\r\n  return data;\r\n}\r\n\r\nasync function deleteContact(id) {\r\n  const { data } = await axios\r\n    .delete(`http://localhost:3000/contacts/${id}`)\r\n    .then(res => res)\r\n    .catch(err => err);\r\n  return data;\r\n}\r\n\r\nasync function fetchContacts() {\r\n  const { data } = await axios.get('http://localhost:3000/contacts');\r\n\r\n  return data;\r\n}\r\n\r\nconst api = {\r\n  postContact,\r\n  fetchContacts,\r\n  deleteContact,\r\n};\r\n\r\nexport default api;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../phonebookAPI';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async name => await api.fetchContacts(name),\r\n);\r\n\r\nexport const postContacts = createAsyncThunk(\r\n  'contacts/postContacts',\r\n  async ({ name, number }) => await api.postContact({ name, number }),\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async id => {\r\n    console.log(id);\r\n    return await api.deleteContact(id);\r\n  },\r\n);\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { filterContacts } from './phonebook-actions';\r\nimport {\r\n  fetchContacts,\r\n  postContacts,\r\n  deleteContact,\r\n} from './phonebook-options';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [postContacts.fulfilled]: (state, action) => [...state, action.payload],\r\n\r\n  [deleteContact.fulfilled]: (state, action) =>\r\n    state.filter(el => el.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contatsReduser from './phonebook/phonebook-reduser';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contatsReduser,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './ContactForm.css';\n\nexport default function ContactForm({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n}) {\n  return (\n    <form className=\"phonebook-form\" onSubmit={handleSubmit}>\n      <label className=\"phonebook-label\">\n        Name\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebook-label\">\n        Number\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className=\"submt-form\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport './Filter.css';\n\nexport default function Filter({ filter, handleChange }) {\n  return (\n    <div>\n      <p className=\"filter-title\">Find contacts by name</p>\n      <input\n        className=\"search\"\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './ContactList.css';\n\nexport default function ContactList({ contacts, deleteItem }) {\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id} className=\"list-item\">\n            {`${contact.name}: ${contact.number}`}\n            <button id={contact.id} onClick={deleteItem} className=\"delete-btn\">\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as action from './components/redux/phonebook/phonebook-actions';\nimport * as options from './components/redux/phonebook/phonebook-options';\n\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(options.fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    if (e.target.name === 'filter') {\n      dispatch(action.filterContacts(e.target.value));\n      return;\n    }\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n      return;\n    }\n    if (e.target.name === 'number') {\n      setNumber(e.target.value);\n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.some(contact => contact.name.includes(name))) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(options.postContacts({ name, number }));\n    dispatch(options.fetchContacts());\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteItem = async e => {\n    const { id } = e.target;\n\n    await dispatch(options.deleteContact(id));\n    dispatch(options.fetchContacts());\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        name={name}\n        number={number}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleChange={handleChange} />\n      <ContactList contacts={handleFilter()} deleteItem={deleteItem} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}